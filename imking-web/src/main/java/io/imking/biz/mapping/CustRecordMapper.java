package io.imking.biz.mapping;

import io.imking.biz.domain.CustRecord;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface CustRecordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tc_cust_record
     *
     * @mbg.generated Wed Jan 17 21:46:14 CST 2018
     */
    @Delete({
        "delete from tc_cust_record",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tc_cust_record
     *
     * @mbg.generated Wed Jan 17 21:46:14 CST 2018
     */
    @Insert({
        "insert into tc_cust_record (id, cust_id, ",
        "user_id, remarks, ",
        "create_time)",
        "values (#{id,jdbcType=BIGINT}, #{custId,jdbcType=BIGINT}, ",
        "#{userId,jdbcType=BIGINT}, #{remarks,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(CustRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tc_cust_record
     *
     * @mbg.generated Wed Jan 17 21:46:14 CST 2018
     */
    @InsertProvider(type=CustRecordSqlProvider.class, method="insertSelective")
    int insertSelective(CustRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tc_cust_record
     *
     * @mbg.generated Wed Jan 17 21:46:14 CST 2018
     */
    @Select({
        "select",
        "id, cust_id, user_id, remarks, create_time",
        "from tc_cust_record",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="cust_id", property="custId", jdbcType=JdbcType.BIGINT),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
        @Result(column="remarks", property="remarks", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    CustRecord selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tc_cust_record
     *
     * @mbg.generated Wed Jan 17 21:46:14 CST 2018
     */
    @UpdateProvider(type=CustRecordSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CustRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tc_cust_record
     *
     * @mbg.generated Wed Jan 17 21:46:14 CST 2018
     */
    @Update({
        "update tc_cust_record",
        "set cust_id = #{custId,jdbcType=BIGINT},",
          "user_id = #{userId,jdbcType=BIGINT},",
          "remarks = #{remarks,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CustRecord record);
}